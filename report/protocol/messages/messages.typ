// Note: this typst file is auto generated by docsgen (see report/docsgen)
// DO NOT edit manually, changes will be overriden at next run.

#figure(raw(block: true, lang: "json", read("../protocol/messages/Action-StartSession.json")), caption: [Message `Action::StartSession`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Action-StopSession.json")), caption: [Message `Action::StopSession`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Action-GetSessions.json")), caption: [Message `Action::GetSessions`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Action-JoinSession.json")), caption: [Message `Action::JoinSession`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Action-LeaveSession.json")), caption: [Message `Action::LeaveSession`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Action-SendFile.json")), caption: [Message `Action::SendFile`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Action-SendResult.json")), caption: [Message `Action::SendResult`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Action-SendResult-2.json")), caption: [Message `Action::SendResult`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Action-SendResult-3.json")), caption: [Message `Action::SendResult`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Action-SendResult-4.json")), caption: [Message `Action::SendResult`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Action-SwitchExo.json")), caption: [Message `Action::SwitchExo`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-SessionStopped.json")), caption: [Message `Event::SessionStopped`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-SessionJoined.json")), caption: [Message `Event::SessionJoined`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-SessionLeaved.json")), caption: [Message `Event::SessionLeaved`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-SessionsList.json")), caption: [Message `Event::SessionsList`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-Stats.json")), caption: [Message `Event::Stats`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-ExoSwitched.json")), caption: [Message `Event::ExoSwitched`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-ServerStopped.json")), caption: [Message `Event::ServerStopped`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-ForwardFile.json")), caption: [Message `Event::ForwardFile`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-ForwardResult.json")), caption: [Message `Event::ForwardResult`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-Error-0.json")), caption: [Message `Event::Error(LiveProtocolError::FailedToStartSession)`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-Error-1.json")), caption: [Message `Event::Error(LiveProtocolError::FailedToJoinSession)`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-Error-2.json")), caption: [Message `Event::Error(LiveProtocolError::FailedSendingWithoutSession)`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-Error-3.json")), caption: [Message `Event::Error(LiveProtocolError::FailedToLeaveSession)`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-Error-4.json")), caption: [Message `Event::Error(LiveProtocolError::SessionNotFound)`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-Error-5.json")), caption: [Message `Event::Error(LiveProtocolError::CannotJoinOtherSession)`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-Error-6.json")), caption: [Message `Event::Error(LiveProtocolError::ForbiddenSessionStop)`])
#figure(raw(block: true, lang: "json", read("../protocol/messages/Event-Error-7.json")), caption: [Message `Event::Error(LiveProtocolError::ActionOnlyForLeader)`])
